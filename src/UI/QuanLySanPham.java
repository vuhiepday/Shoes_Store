/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.awt.event.ActionEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import DAO.SPDAO;
import MODAL.SanPham;
import java.awt.event.ActionListener;
import javax.swing.table.DefaultTableModel;

import java.awt.Image;
import java.awt.Window;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Hooofaaa
 */
public class QuanLySanPham extends javax.swing.JFrame {
    List<SanPham> listSP = new ArrayList<>();
    DefaultTableModel tblModel = new DefaultTableModel();
    int index = 0;
    /**
     * Creates new form QuanLySanPham
     */
    public QuanLySanPham() {
        initComponents();
        setLocationRelativeTo(null);
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        fillToTable();
        
    }
    private void showSelectedRow() {
        int selectedRow = tblSanPham.getSelectedRow();
        if (selectedRow >= 0) {
            String imagePath = tblSanPham.getValueAt(selectedRow, 5).toString(); // Đảm bảo cột 5 chứa đường dẫn hình ảnh
           
            displayImage(imagePath);
        }
    }



    private void displayImage(String imagePath) {
        // Tạo một đối tượng File từ đường dẫn ảnh
        File imageFile = new File(imagePath);

        // Kiểm tra xem file có tồn tại không
        if (imageFile.exists()) {
            // Nếu file tồn tại, tạo một ImageIcon từ đường dẫn ảnh
            ImageIcon icon = new ImageIcon(imagePath);
            Image img = icon.getImage();

            // Lấy kích thước gốc của ảnh
            int originalWidth = icon.getIconWidth();
            int originalHeight = icon.getIconHeight();

            // Lấy kích thước của thành phần giao diện (component)
            int componentWidth = lbHinhAnh.getWidth();
            int componentHeight = lbHinhAnh.getHeight();

            // Tính toán hệ số tỷ lệ để duy trì tỉ lệ khung hình của ảnh
            double widthScale = (double) componentWidth / originalWidth;
            double heightScale = (double) componentHeight / originalHeight;
            double scale = Math.min(widthScale, heightScale);

            // Tính toán kích thước mới cho ảnh sau khi tỷ lệ
            int newWidth = (int) (originalWidth * scale);
            int newHeight = (int) (originalHeight * scale);

            // Thay đổi kích thước của ảnh theo kích thước mới
            Image scaledImg = img.getScaledInstance(newWidth, newHeight, Image.SCALE_SMOOTH);

            // Đặt ảnh đã thay đổi kích thước vào thành phần giao diện
            lbHinhAnh.setIcon(new ImageIcon(scaledImg));
        } else {
            // Nếu file không tồn tại, hiển thị thông báo lỗi và xóa ảnh hiện tại trên thành phần giao diện
            JOptionPane.showMessageDialog(null, "File không tồn tại: " + imagePath);
            lbHinhAnh.setIcon(null);
        }

        // Cập nhật lại giao diện của thành phần để hiển thị ảnh mới
        lbHinhAnh.repaint();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtSL = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtDonGia = new javax.swing.JTextField();
        cboHangSX = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        btnNhapMoi = new javax.swing.JButton();
        btnNhapSL = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtKichThuoc = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        lbHinhAnh = new javax.swing.JLabel();
        btnChonAnh = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 102, 102));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel2.setText("Mã sản phẩm:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel3.setText("Tên sản phẩm:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setText("Số lượng:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel5.setText("Đơn giá:");

        cboHangSX.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        cboHangSX.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nike", "Adidas", "Puma", "New Balance", "Converse", "Vans", "Balenciaga" }));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel6.setText("Hãng sản xuất:");

        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons_baiOnTap/Actions-document-new-icon.png"))); // NOI18N
        btnThem.setText("Thêm sản phẩm");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons_baiOnTap/Action-cancel-icon.png"))); // NOI18N
        btnXoa.setText("Xóa sản phẩm");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons_baiOnTap/document-edit-icon.png"))); // NOI18N
        btnSua.setText("Sửa sản phẩm");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã SP", "Tên SP", "Hãng SX", "Size", "Đơn giá", "Hình ảnh", "Số lượng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPham);

        btnNhapMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons_baiOnTap/Action-file-new-icon.png"))); // NOI18N
        btnNhapMoi.setText("Nhập SP mới");
        btnNhapMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapMoiActionPerformed(evt);
            }
        });

        btnNhapSL.setText("Nhập số lượng cần thêm");
        btnNhapSL.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhapSLActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel7.setText("Kích thước:");

        lbHinhAnh.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnChonAnh.setText("Chọn ảnh:");
        btnChonAnh.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(204, 204, 204)));
        btnChonAnh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonAnhActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 0, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("THÔNG TIN SẢN PHẨM");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(321, 321, 321))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addGap(257, 257, 257))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cboHangSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaSP)
                            .addComponent(txtTenSP)
                            .addComponent(txtSL)
                            .addComponent(txtDonGia)
                            .addComponent(txtKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                        .addComponent(lbHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(196, 196, 196))))
            .addGroup(layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnChonAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(426, 426, 426)
                        .addComponent(btnNhapSL))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNhapMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(btnThem)
                        .addGap(114, 114, 114)
                        .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(btnSua)))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtMaSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtTenSP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboHangSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtKichThuoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtSL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtDonGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbHinhAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChonAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNhapSL))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNhapMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSua, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        // TODO add your handling code here:  
        this.themSP();
        
        this.kiemTraDuLieuNhap();
        JOptionPane.showMessageDialog(null, "Sản phẩm đã được lưu thành công!");
        this.fillToTable();
    }//GEN-LAST:event_btnThemActionPerformed

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
        this.showDetail();
    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        this.xoaSanPham();
        
        this.kiemTraDuLieuNhap();
        this.fillToTable();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        this.suaSanPham();
        
        this.kiemTraDuLieuNhap();
        this.fillToTable();
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnNhapMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapMoiActionPerformed
        // TODO add your handling code here:
        this.nhapSPMoi();
    }//GEN-LAST:event_btnNhapMoiActionPerformed

    private void btnNhapSLActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhapSLActionPerformed
        // TODO add your handling code here:
        CapNhatSoLuong show = new CapNhatSoLuong();
        show.setVisible(true);
        show.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosed(WindowEvent e) {
                fillToTable(); // Cập nhật bảng khi form ThemSoLuong đóng
            }
        });
    }//GEN-LAST:event_btnNhapSLActionPerformed

    private void btnChonAnhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonAnhActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        int result = fileChooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String filePath = selectedFile.getAbsolutePath();
            // Gán đường dẫn của tệp vào trường hình ảnh của sản phẩm
            lbHinhAnh.setText(filePath);
        
             //Hiển thị hình ảnh
            ImageIcon imageIcon = new ImageIcon(filePath);
            Image img = imageIcon.getImage().getScaledInstance(lbHinhAnh.getWidth(), lbHinhAnh.getHeight(), Image.SCALE_SMOOTH);
            lbHinhAnh.setIcon(new ImageIcon(img));
        }
    }//GEN-LAST:event_btnChonAnhActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
          int confirm = JOptionPane.showConfirmDialog(this, "Bạn có muốn thoát?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
           
            Admin ad=new Admin();
            ad.setVisible(true);
            this.dispose();
        } 
    }//GEN-LAST:event_formWindowClosing
 
    public void nhapSPMoi(){
        txtMaSP.setText("");
        txtTenSP.setText("");
        cboHangSX.setSelectedItem("");
        txtKichThuoc.setText("");
        txtSL.setText("");
        txtDonGia.setText("");
        lbHinhAnh.setText("");
    }
    
    //Thêm sản phẩm
    public void themSP() {
        SanPham sp = new SanPham();
        sp.setMaSP(Integer.parseInt(txtMaSP.getText()));
        sp.setTenSP(txtTenSP.getText());
        sp.setHangSX((String) cboHangSX.getSelectedItem());
        sp.setSize((String) txtKichThuoc.getText());
        sp.setHinhAnh(lbHinhAnh.getText());
        sp.setDonGia(Integer.parseInt(txtDonGia.getText()));
        
        // Hiển thị hình ảnh trong JLabel
        String filePath = sp.getHinhAnh();
        if (filePath != null && !filePath.isEmpty()) {
            ImageIcon imageIcon = new ImageIcon(filePath);
            Image img = imageIcon.getImage().getScaledInstance(lbHinhAnh.getWidth(), lbHinhAnh.getHeight(), Image.SCALE_SMOOTH);
            lbHinhAnh.setIcon(new ImageIcon(img));
        } else {
            lbHinhAnh.setIcon(null); // Xóa hình ảnh nếu không có đường dẫn
        }
        
        SPDAO spdao = new SPDAO();
        // Thêm sản phẩm vào cơ sở dữ liệu và danh sách
        listSP = spdao.taothemSP(sp);
    }

    //Xuất dữ liệu 
    public void fillToTable() {
        tblModel = (DefaultTableModel) tblSanPham.getModel();
        tblModel.setRowCount(0);

        SPDAO spdao = new SPDAO();
        listSP = spdao.docTatCaSP();  // Lấy dữ liệu sản phẩm từ cơ sở dữ liệu
        
        for (SanPham sp : listSP) {
            Object[] row = new Object[]{ sp.getMaSP(), sp.getTenSP(), sp.getHangSX(), sp.getSize(), sp.getDonGia(), sp.getHinhAnh(), sp.getSoLuong()};
            tblModel.addRow(row);
        }

        tblSanPham.setModel(tblModel);
        
        tblSanPham.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (!event.getValueIsAdjusting()) {
                    showSelectedRow();
                }
            }
        });
    }
    
    
    public void showDetail() {
        index = tblSanPham.getSelectedRow();
        if(index < 0){
            JOptionPane.showMessageDialog(this, "Bạn chưa 1 dòng trên bảng!");
            return;
        }
        else{
            SanPham sp = new SanPham();
            sp = listSP.get(index);
            txtMaSP.setText(String.valueOf(sp.getMaSP()));
            txtTenSP.setText(sp.getTenSP());
            cboHangSX.setSelectedItem(sp.getHangSX());
            txtKichThuoc.setText(String.valueOf(sp.getSize()));
            txtSL.setText(String.valueOf(sp.getSoLuong()));
            txtDonGia.setText(String.valueOf(sp.getDonGia()));
        }
    }
    
    //Xóa sản phẩm
    public void xoaSanPham() {
        int index = tblSanPham.getSelectedRow();
        if (index >= 0) {
            SanPham sp = listSP.get(index);
            int confirm = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa sản phẩm này?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                SPDAO spdao = new SPDAO();
                // Xóa sản phẩm từ cơ sở dữ liệu
                boolean result = spdao.xoaSP(String.valueOf(sp.getMaSP()));
                if (result) {
                    // Xóa sản phẩm khỏi danh sách nếu xóa thành công trong cơ sở dữ liệu
                    listSP.remove(index); 
                    fillToTable(); // Cập nhật lại bảng
                    JOptionPane.showMessageDialog(null, "Xóa sản phẩm thành công.");
                } else {
                    JOptionPane.showMessageDialog(null, "Xóa sản phẩm thất bại.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm để xóa.");
        }
    }
    
    //Sửa lại sản phẩm
    public void suaSanPham() {
        int index = tblSanPham.getSelectedRow();
        if (index >= 0) {
            SanPham sp = listSP.get(index);
            sp.setTenSP(txtTenSP.getText());
            sp.setHangSX((String) cboHangSX.getSelectedItem());
            sp.setSize((String) txtKichThuoc.getText());
            sp.setDonGia(Integer.parseInt(txtDonGia.getText()));

            SPDAO spdao = new SPDAO();
            boolean result = spdao.suaSP(sp);
            if (result) {
                listSP.set(index, sp); // Cập nhật trong danh sách tạm thời
                fillToTable(); // Cập nhật lại bảng
                JOptionPane.showMessageDialog(null, "Cập nhật sản phẩm thành công.");
            } else {
                JOptionPane.showMessageDialog(null, "Cập nhật sản phẩm thất bại.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm để cập nhật.");
        }
    }
    public void kiemTraDuLieuNhap() {
        // Kiểm tra rỗng hoặc sai ký tự
        if (txtMaSP.getText().isEmpty() || txtTenSP.getText().isEmpty() || txtKichThuoc.getText().isEmpty() || txtSL.getText().isEmpty() || txtDonGia.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng điền đầy đủ thông tin.");
        }

        // Kiểm tra mã sản phẩm không được rỗng
        if (txtMaSP.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Mã sản phẩm không được rỗng.");
        }

        // Kiểm tra tên sản phẩm không được rỗng và không chứa ký tự số
        if (txtTenSP.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tên sản phẩm không được rỗng.");
        }

        // Kiểm tra kích thước phải là số
        try {
            Float.parseFloat(txtKichThuoc.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Kích thước phải là một số.");
        }

        // Kiểm tra số lượng phải là một số và không âm
        try {
            int soLuong = Integer.parseInt(txtSL.getText());
            if (soLuong < 0) {
                JOptionPane.showMessageDialog(null, "Số lượng không được âm.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Số lượng phải là một số.");
        }

        // Kiểm tra đơn giá phải là một số và không rỗng
        try {
            int donGia = Integer.parseInt(txtDonGia.getText());
            if (donGia < 0) {
                JOptionPane.showMessageDialog(null, "Đơn giá không được âm.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Đơn giá phải là một số và không được rỗng.");
        }
    }

    private void capNhatSoLuong(String maSP, int soLuongMoi) {
    // Tìm dòng trong bảng hiển thị sản phẩm có mã sản phẩm tương ứng và cập nhật số lượng mới
        for (int i = 0; i < tblModel.getRowCount(); i++) {
            if (tblModel.getValueAt(i, 0).equals(maSP)) { // Giả sử cột đầu tiên là cột chứa mã sản phẩm
                tblModel.setValueAt(soLuongMoi, i, 6); // Giả sử cột thứ 7 là cột chứa số lượng
                break; // Tìm thấy dòng tương ứng, không cần duyệt tiếp
            }
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLySanPham.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLySanPham().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChonAnh;
    private javax.swing.JButton btnNhapMoi;
    private javax.swing.JButton btnNhapSL;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox<String> cboHangSX;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbHinhAnh;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtDonGia;
    private javax.swing.JTextField txtKichThuoc;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtSL;
    private javax.swing.JTextField txtTenSP;
    // End of variables declaration//GEN-END:variables
}
